import logging
import asyncio
import random
from aiogram import Bot, Dispatcher, types

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞ (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–π)
TOKEN = "7909575276:AAH8gq7lrpgBUlscwZ7Gn2Fd8-PTcYEysUA"

# –í–∫–ª—é—á–µ–Ω–∏–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)

# –°–æ–∑–¥–∞—ë–º –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä
bot = Bot(token=TOKEN)
dp = Dispatcher()

# –í–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã
decisions = [
    "–î–∞!",
    "–ù–µ—Ç!",
    "–í–æ–∑–º–æ–∂–Ω–æ...",
    "–ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.",
    "–û–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ –¥–∞!",
    "–Ø –Ω–µ —É–≤–µ—Ä–µ–Ω, –ø–µ—Ä–µ—Å–ø—Ä–æ—Å–∏.",
    "–ö–æ–Ω–µ—á–Ω–æ!",
    "–°–æ–º–Ω–µ–≤–∞—é—Å—å.",
    "–°–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ, –¥–∞.",
    "–ù–µ –≤ —ç—Ç–æ—Ç —Ä–∞–∑!"
    "–ï–±–∞—Ç—å —Ç—ã –º—É–¥–∞–∫!"
    "–£ —Ç–µ–±—è —Ö—É–µ–≤—ã–π –≤–æ–ø—Ä–æ—Å, –¥–∞–≤–∞–π –¥—Ä—É–≥–æ–π –≥–∞–≤–Ω–æ —Ç—ã —Ç–∞–∫–æ–µ!"
    "–ê–Ω–¥—Ä–µ–π –õ–∏—Å–û–≤?! –≠—Ç–æ —Ç—ã?!!"
]

@dp.message(lambda message: message.text == "/start")
async def start(message: types.Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç-–†–µ—à–∞–ª–∞. –ó–∞–¥–∞–π –º–Ω–µ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å, –∏ —è –¥–∞–º –æ—Ç–≤–µ—Ç!")

@dp.message()
async def give_decision(message: types.Message):
    answer = random.choice(decisions)
    await message.answer(f"üîÆ {answer}")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    await dp.start_polling(bot, drop_pending_updates=True)

if __name__ == "__main__":
    asyncio.run(main())
